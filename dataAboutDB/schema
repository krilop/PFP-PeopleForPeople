address: table
    + columns
        id: bigint NN identity 1
            . properties
                identity_kind = ALWAYS
            . references
                sequence = geolocations_id_seq
        title: text NN
        address: json NN
    + indices
        pk_address: unique (id)
    + keys
        pk_address: PK (id)
authorization: table
    + columns
        id: bigint NN
        email: text NN
        login: varchar(30) NN
        hash_of_pass: text NN
    + indices
        pk_authorization: unique (id)
    + keys
        pk_authorization: PK (id)
contact: table
    + columns
        id: bigint NN identity 1
            . properties
                identity_kind = ALWAYS
            . references
                sequence = contacts_id_seq
        user_id: bigint NN
        info: text NN
        contact_type: numeric(2) NN default 1
    + indices
        pk_contact: unique (id)
    + keys
        pk_contact: PK (id)
    + foreign-keys
        fk_user_id: foreign key (user_id) -> authorization[.pk_authorization] (id)
contact_type: table
    + columns
        id: bigint NN
        contact_title: text NN
    + indices
        pk_contact_type_id: unique (id)
        unique_contact_type: unique (contact_title)
    + keys
        pk_contact_type_id: PK (id)
        unique_contact_type: AK (contact_title)
event: table
    + columns
        id: bigint NN identity 1
            . properties
                identity_kind = ALWAYS
            . references
                sequence = events_id_seq
        type_id: bigint NN
        title: text NN
        discription: text
        cost: money NN default 0
        payment_method: text NN
    + indices
        pk_event: unique (id)
    + keys
        pk_event: PK (id)
    + foreign-keys
        fk_type_id: foreign key (type_id) -> interest_type[.pk_interest_type] (id)
event_address: table
    + columns
        id: bigint NN identity 1
            . properties
                identity_kind = ALWAYS
            . references
                sequence = events_geolocation_id_seq
        event_id: bigint NN
        address_id: bigint NN
    + indices
        pk_event_address: unique (id)
    + keys
        pk_event_address: PK (id)
    + foreign-keys
        fk_event_id: foreign key (event_id) -> event[.pk_event] (id)
        fk_address: foreign key (address_id) -> address[.pk_address] (id)
event_date: table
    + columns
        id: bigint NN identity 1
            . properties
                identity_kind = ALWAYS
            . references
                sequence = eventsDates_id_seq
        event_id: bigint NN
        date_start: timestamp NN
        date_end: timestamp NN
    + indices
        pk_event_date: unique (id)
    + keys
        pk_event_date: PK (id)
    + foreign-keys
        fk_event_date: foreign key (event_id) -> event[.pk_event] (id)
interest_type: table
    + columns
        id: smallint NN identity 1
            . properties
                identity_kind = ALWAYS
            . references
                sequence = interestType_id_seq
        title_of_type: text NN
    + indices
        pk_interest_type: unique (id)
        unique: unique (title_of_type)
    + keys
        pk_interest_type: PK (id)
        unique: AK (title_of_type)
interest_type_user: table
    + columns
        id: bigint NN identity 1
            . properties
                identity_kind = ALWAYS
            . references
                sequence = interestType_users_id_seq
        user_id: bigint NN
        interest_id: smallint NN
    + indices
        pk_interest_type_user: unique (id)
    + keys
        pk_interest_type_user: PK (id)
    + foreign-keys
        fk_user_id: foreign key (user_id) -> authorization[.pk_authorization] (id)
        fk_interest_id: foreign key (interest_id) -> interest_type[.pk_interest_type] (id)
list_of_customers: table
    + columns
        id: bigint NN identity 1
            . properties
                identity_kind = ALWAYS
            . references
                sequence = listOfCustomers_id_seq
        user_id: bigint NN
        event_id: bigint NN
    + indices
        pk_list_of_customers: unique (id)
    + keys
        pk_list_of_customers: PK (id)
    + foreign-keys
        fk_user_id: foreign key (user_id) -> authorization[.pk_authorization] (id)
        fk_event_id: foreign key (event_id) -> event[.pk_event] (id)
relation: table
    + columns
        id: bigint NN identity 1
            . properties
                identity_kind = ALWAYS
            . references
                sequence = relations_id_seq
        user_id: bigint NN
        friend_id: bigint NN
        relation_type: smallint NN
    + indices
        pk_relation: unique (id)
    + keys
        pk_relation: PK (id)
    + foreign-keys
        fk_user_id: foreign key (user_id) -> authorization[.pk_authorization] (id)
        fk_friend_id: foreign key (friend_id) -> authorization[.pk_authorization] (id)
        fk_relation_type: foreign key (relation_type) -> relation_type[.pk_relation_type] (id)
relation_type: table
    + columns
        id: smallint NN identity 1
            . properties
                identity_kind = ALWAYS
            . references
                sequence = relationType_id_seq
        relation_title: text NN
    + indices
        pk_relation_type: unique (id)
        unique_relation_title: unique (relation_title)
    + keys
        pk_relation_type: PK (id)
        unique_relation_title: AK (relation_title)
user_data: table
    + columns
        name: text NN
        last_name: text NN
        description: text
        date_of_birth: timestamp NN
        geolocation: text NN
        media: json
        gender: numeric(1) NN
        user_id: bigint NN
    + indices
        #1: unique (user_id)
    + keys
        #1: AK (user_id) (underlying index #1)
    + foreign-keys
        fk_user_data_user_id: foreign key (user_id) -> authorization[.pk_authorization] (id)
