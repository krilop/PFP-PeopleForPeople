create table public."authorization" (
  id bigint primary key not null,
  email text not null,
  login text not null,
  hash_of_pass text not null
);

create table public.contact (
  id bigint primary key not null,
  user_id bigint not null,
  info text not null,
  contact_type contact_type_enum not null,
  foreign key (user_id) references public."authorization" (id)
  match simple on update no action on delete no action
);

create table public.interest_type (
  id bigint primary key not null,
  title_of_type text not null
);
create unique index unique_title_of_type on interest_type using btree (title_of_type);

create table public.interest_user (
  id bigint primary key not null,
  user_id bigint not null,
  interest_id smallint not null,
  foreign key (user_id) references public."authorization" (id)
  match simple on update no action on delete no action,
  foreign key (interest_id) references public.interest_type (id)
  match simple on update no action on delete no action
);

create table public.pair (
  user_id bigint not null,
  another_id bigint not null,
  id bigint primary key not null,
  direction boolean not null,
  foreign key (another_id) references public.user_data (user_id)
  match simple on update no action on delete no action,
  foreign key (user_id) references public.user_data (user_id)
  match simple on update no action on delete no action
);
create unique index pair_user_id_another_id_direction on pair using btree (user_id, another_id, direction);

create table public.relation (
  id bigint primary key not null,
  pair_id bigint not null,
  relation_type bigint not null,
  foreign key (pair_id) references public.pair (id)
  match simple on update no action on delete no action,
  foreign key (relation_type) references public.relation_type (id)
  match simple on update no action on delete no action
);

create table public.relation_type (
  id bigint primary key not null,
  relation_title text not null
);
create unique index unique_relation_title on relation_type using btree (relation_title);

create table public.user_data (
  name text not null,
  last_name text not null,
  description text,
  date_of_birth timestamp without time zone not null,
  media jsonb,
  gender numeric(1,0) not null,
  user_id bigint primary key not null,
  foreign key (user_id) references public."authorization" (id)
  match simple on update no action on delete no action
);
create unique index unique_user_id on user_data using btree (user_id);

